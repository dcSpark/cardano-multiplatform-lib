"use strict";(self.webpackChunkcddl_codegen_documentation=self.webpackChunkcddl_codegen_documentation||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introduction","href":"/cardano-multiplatform-lib/","docId":"index"},{"type":"link","label":"Installation & Getting Started","href":"/cardano-multiplatform-lib/getting_started","docId":"getting_started"},{"type":"link","label":"Crate Architecture","href":"/cardano-multiplatform-lib/crate_architecture","docId":"crate_architecture"},{"type":"category","label":"Modules","collapsible":true,"collapsed":false,"items":[{"type":"category","label":"Core","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Core","href":"/cardano-multiplatform-lib/modules/core/","docId":"modules/core/index"}],"href":"/cardano-multiplatform-lib/category/core"},{"type":"category","label":"Chain","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chain","href":"/cardano-multiplatform-lib/modules/chain/","docId":"modules/chain/index"}],"href":"/cardano-multiplatform-lib/category/chain"},{"type":"category","label":"Crypto","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Generating Keys and Addresses","href":"/cardano-multiplatform-lib/modules/crypto/generating_keys","docId":"modules/crypto/generating_keys"},{"type":"link","label":"crypto","href":"/cardano-multiplatform-lib/modules/crypto/","docId":"modules/crypto/index"}],"href":"/cardano-multiplatform-lib/category/crypto"},{"type":"category","label":"Builders","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"TransactionBuilder","href":"/cardano-multiplatform-lib/modules/builders/generating_transactions","docId":"modules/builders/generating_transactions"}],"href":"/cardano-multiplatform-lib/category/builders"},{"type":"link","label":"CIP25","href":"/cardano-multiplatform-lib/modules/CIP25","docId":"modules/CIP25"},{"type":"link","label":"CIP36","href":"/cardano-multiplatform-lib/modules/cip36","docId":"modules/cip36"},{"type":"link","label":"Metadata","href":"/cardano-multiplatform-lib/modules/metadata","docId":"modules/metadata"}],"href":"/cardano-multiplatform-lib/category/modules"}]},"docs":{"crate_architecture":{"id":"crate_architecture","title":"Crate Architecture","description":"- Core - Core types common throughout all CML crates.","sidebar":"tutorialSidebar"},"getting_started":{"id":"getting_started","title":"Installation & Getting Started","description":"Install","sidebar":"tutorialSidebar"},"index":{"id":"index","title":"Cardano Multiplatform Lib","description":"This is a library, written in Rust, that can be deployed to multiple platforms (Rust crate, JS, Typescript, WASM, etc). It handles:","sidebar":"tutorialSidebar"},"modules/builders/generating_transactions":{"id":"modules/builders/generating_transactions","title":"TransactionBuilder","description":"In order to simplify transaction creation, we provide a TransactionBuilder struct that manages witnesses, fee calculation, change addresses and such. Assume we have instantiated an instance under the variable builder for this explanation. The TransactionBuilder requires several protocol parameters governing Cardano to be created which is shown in the following section. These are specified initially in the genesis file for Cardano nodes.","sidebar":"tutorialSidebar"},"modules/chain/index":{"id":"modules/chain/index","title":"Chain","description":"This crate contains all of the on-chain types used in the current Cardano era. All of these types can be serialized and deserialized from their on-chain CBOR encodings. Also included are some utility funtionality for working with them, as well as builders for creating them.","sidebar":"tutorialSidebar"},"modules/CIP25":{"id":"modules/CIP25","title":"CIP25","description":"Context","sidebar":"tutorialSidebar"},"modules/cip36":{"id":"modules/cip36","title":"CIP36","description":"","sidebar":"tutorialSidebar"},"modules/core/index":{"id":"modules/core/index","title":"Core","description":"This crate is for core features and traits common to all CML crates. Most users likely won\'t need to directly use this module except for possibly pulling in traits used with other cml crates. If you are using CML from WASM/typescript this module will not be needed as any used types will be re-exported in the crates (e.g. cml-chain-wasm, cml-cip25-wasm, etc) that use it.","sidebar":"tutorialSidebar"},"modules/crypto/generating_keys":{"id":"modules/crypto/generating_keys","title":"Generating Keys and Addresses","description":"BIP32 Keys","sidebar":"tutorialSidebar"},"modules/crypto/index":{"id":"modules/crypto/index","title":"crypto","description":"AuxiliaryDataHash","sidebar":"tutorialSidebar"},"modules/metadata":{"id":"modules/metadata","title":"Metadata","description":"Transaction Metadata format","sidebar":"tutorialSidebar"}}}')}}]);