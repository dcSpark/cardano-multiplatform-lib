;$hash28 /= bytes .size 28
;$hash32 /= bytes .size 32

;$vkey /= bytes .size 8

;$vrf_vkey /= bytes .size 8
;natural = #6.2(bytes)

;$kes_vkey /= bytes .size 8

;$signature /= bytes .size 16

;addr_keyhash          = $hash28
;genesis_delegate_hash = $hash28
;pool_keyhash          = $hash28
;genesishash           = $hash28

;vrf_keyhash           = $hash32
;auxiliary_data_hash   = $hash32
;pool_metadata_hash    = $hash32

; To compute a script hash, note that you must prepend
; a tag to the bytes of the script before hashing.
; The tag is determined by the language.
; The tags in the Babbage era are:
;   "\x00" for multisig scripts
;   "\x01" for Plutus V1 scripts
;   "\x02" for Plutus V2 scripts
;scripthash            = $hash28

;datum_hash = $hash32

KES_signature /= bytes .size 32
signkeyKES = bytes .size 16

VRF_cert /= [bytes, bytes .size 10]
$nonce /= [
  0 // 1, bytes .size 32
]

vkeywitness = [ $vkey, ed25519_signature ]

bootstrap_witness =
  [ public_key : vkey
  , signature  : ed25519_signature
  , chain_code : bytes .size 32
  , attributes : bytes
  ]


; all types hand-coded here:
vkey = _CDDL_CODEGEN_RAW_BYTES_TYPE_
VRF_vkey = _CDDL_CODEGEN_RAW_BYTES_TYPE_
natural = _CDDL_CODEGEN_RAW_BYTES_TYPE_
KES_vkey = _CDDL_CODEGEN_RAW_BYTES_TYPE_
ed25519_signature = _CDDL_CODEGEN_RAW_BYTES_TYPE_
ed25519_key_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
genesis_delegate_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
genesis_hash           = _CDDL_CODEGEN_RAW_BYTES_TYPE_
VRF_key_hash           = _CDDL_CODEGEN_RAW_BYTES_TYPE_
auxiliary_data_hash   = _CDDL_CODEGEN_RAW_BYTES_TYPE_
pool_metadata_hash    = _CDDL_CODEGEN_RAW_BYTES_TYPE_
script_hash            = _CDDL_CODEGEN_RAW_BYTES_TYPE_
datum_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
block_body_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
block_header_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
transaction_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
script_data_hash = _CDDL_CODEGEN_RAW_BYTES_TYPE_
