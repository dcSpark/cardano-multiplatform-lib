CIP25_string64 = text .size (0..64)

CIP25_files_details = 
  {
    name : CIP25_string64,
    mediaType : CIP25_string64,
    src : CIP25_chunkable_string
  }


CIP25_chunkable_string =
    CIP25_string64      ; @name single
    /
    [* CIP25_string64]  ; @name chunked

CIP25_metadata_details = 
  {
    name : CIP25_string64,
    image : CIP25_chunkable_string, 
    ? mediaType : CIP25_string64,
    ? description : CIP25_chunkable_string,
    ? files : [* CIP25_files_details]
  }

CIP25_metadata = { 721 : CIP25_label_metadata }



; original two version cddl used to generate the initial serialization code:
; policy_id_v1 = string64 ; @newtype
; asset_name_v1 = string64 ; @newtype utf-8
; policy_id_v2 = bytes ; @newtype no longer in text
; asset_name_v2 = bytes ; @newtype no longer in text and utf-8
; label_metadata_v1 = { * policy_id_v1 => { * asset_name_v1 => metadata_details } }
; data = { * policy_id_v2 => { * asset_name_v2 => metadata_details } }
; label_metadata_v2 = { data: data, version: 2 } ; version 2
; label_metadata = label_metadata_v1 / label_metadata_v2

; all of those above are replaced by one partially hand-written type:
; the serialization code was mostly ripped from the code generated by the types above though

CIP25_label_metadata = _CDDL_CODEGEN_EXTERN_TYPE_

; this was hand-edited due to:
; a) avoid all these redundant types that only impact serialization and make it harder to integrate with the rest of CIP25 (PolicyId/AssetName)
; b) we need permissive parsing so even if we avoided it for a) we would still end up modfiying it